%%% -*-BibTeX-*-
%%% ====================================================================
%%% This is a collection of sample BibTeX entries that have been
%%% prettyprinted by bibclean, ordered by biborder, and sorted by
%%% bibsort.
%%%
%%% Bibliography tools available on *.math.utah.edu are documented
%%% by the standard Unix "man" command, and include at least these:
%%%
%%%     bibcheck
%%%     bibclean
%%%     bibdup
%%%     bibextract
%%%     bibjoin
%%%     biblabel
%%%     biblex
%%%     biborder
%%%     bibparse
%%%     bibsearch
%%%     bibsort
%%%     bibsplit
%%%     bibsql
%%%     bibtex
%%%     bibtosql
%%%     bibunlex
%%%
%%% [30-Mar-2016]
%%% ====================================================================

@Preamble{
 "\def \noopsort #1{}"
}

%%% ====================================================================
%%% Journal abbreviations:

@String{j-ANN-HIST-COMPUT       = "Annals of the History of Computing"}

@String{j-ANN-MATH              = "Annals of Mathematics"}

@String{j-ANN-PHYS-1900-4       = "Annalen der Physik (1900) (series 4)"}

@String{j-BELL-SYST-TECH-J      = "The Bell System Technical Journal"}

@String{j-CBM                   = "Computers in Biology and Medicine"}

@String{j-COMPUTER              = "Computer"}

@String{j-HIST-STUD-PHYS-SCI    = "Historical Studies in the Physical Sciences"}

@String{j-J-STAT-PLANN-INFERENCE = "Journal of Statistical Planning and
                                  Inference"}

@String{j-MATH-TABLES-OTHER-AIDS-COMPUT = "Mathematical Tables and Other Aids
                                  to Computation"}

@String{j-MONTHLY-NOT-ROY-ASTRON-SOC = "Monthly Notices of the Royal
                                  Astronomical Society"}

@String{j-PROBAB-THEORY-RELAT-FIELDS = "Probability Theory and Related Fields"}

@String{j-SCI-AMER              = "Scientific American"}

%%% ====================================================================
%%% Publishers and their addresses:

@String{pub-AW                  = "Ad{\-d}i{\-s}on-Wes{\-l}ey"}
@String{pub-AW:adr              = "Reading, MA, USA"}

@String{pub-BASIC-BOOKS         = "Basic Books"}
@String{pub-BASIC-BOOKS:adr     = "New York, NY, USA"}

@String{pub-CSLI                = "CSLI Publications"}
@String{pub-CSLI:adr            = "Stanford, CA, USA"}

@String{pub-CAMBRIDGE           = "Cambridge University Press"}
@String{pub-CAMBRIDGE:adr       = "Cambridge, UK"}

@String{pub-ELSEVIER            = "Elsevier"}
@String{pub-ELSEVIER:adr        = "Amsterdam, The Netherlands"}

@String{pub-ORA-MEDIA           = "O'Reilly Media, Inc."}
@String{pub-ORA-MEDIA:adr       = "1005 Gravenstein Highway North,
                                   Sebastopol, CA 95472, USA"}

@String{pub-SV                  = "Springer-Verlag"}
@String{pub-SV:adr              = "Berlin, Germany~/ Heidelberg, Germany~/
                                   London, UK~/ etc."}

@String{pub-WALKER              = "Walker and Company"}
@String{pub-WALKER:adr          = "435 Hudson Street, New York, NY 10014, USA"}

%%% ====================================================================
%%% Bibliography entries, sorted by citation key, with ``bibsort'':

@mastersthesis{annie,
  author       = {Anastasia Cherkaev},
  title        = {Sweetpea: A Language For Experimental Design},
  school       = {The University of Utah},
  year         = 2018,
  address      = {ProQuest},
  month        = 12
}

@inproceedings{chakraborty2013scalable,
  title={A scalable and nearly uniform generator of {SAT} witnesses},
  author={Chakraborty, Supratik and Meel, Kuldeep S and Vardi, Moshe Y},
  booktitle={International Conference on Computer Aided Verification},
  pages={608--623},
  year={2013},
  organization={Springer}
}

@inproceedings{DBLP:conf/sat/SoosNC09,
  author    = {Mate Soos and
               Karsten Nohl and
               Claude Castelluccia},
  title     = {Extending {SAT} solvers to cryptographic problems},
  booktitle = {Theory and Applications of Satisfiability Testing - {SAT} 2009, 12th
               International Conference, {SAT} 2009, Swansea, UK, June 30 - July
               3, 2009. Proceedings},
  pages     = {244--257},
  year      = {2009},
  crossref  = {DBLP:conf/sat/2009},
  url       = {https://doi.org/10.1007/978-3-642-02777-2\_24},
  doi       = {10.1007/978-3-642-02777-2\_24},
  timestamp = {Tue, 23 May 2017 01:08:19 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/sat/SoosNC09},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{SGRM18,
  author={Sharma, Shubham and  Gupta, Rahul and  Roy, Subhajit and  Meel, Kuldeep S.},
  title={Knowledge Compilation meets Uniform Sampling},
  year={2018},
  code={https://github.com/meelgroup/KUS},
  booktitle={Proceedings of International Conference on Logic for Programming Artificial Intelligence and Reasoning (LPAR)},
  month={11},
  abstract={Uniform sampling has drawn diverse applications in programming languages and software engineering, like in constrained-random verification (CRV), constrained-fuzzing and bug synthesis. The effectiveness of these applications depend on the uniformity of test stimuli generated from a given set of constraints. Despite significant progress over the past few years, the performance of the state of the art techniques still falls short of those of heuristic methods employed in the industry which sacrifice either uniformity or scalability when generating stimuli. In this paper, we propose a new approach to the uniform generation that builds on recent progress in knowledge compilation. The primary contribution of this paper is marrying knowledge compilation with uniform sampling: our algorithm, KUS, employs the state-of-the-art knowledge compilers to first compile constraints into d-DNNF form, and then, generates samples by making two passes over the compiled representation. We show that KUS is able to significantly outperform existing state-of-the-art algorithms, SPUR and UniGen2, by up to 3 orders of magnitude in terms of runtime while achieving a geometric speedup of 1.7 and 8.3 over SPUR and UniGen2 respectively. Also, KUS achieves a lower PAR-2 score, around 0.82x that of SPUR and 0.38x that of UniGen2. Furthermore, KUS achieves speedups of up to 3 orders of magnitude for incremental sampling. The distribution generated by KUS is statistically indistinguishable from that generated by an ideal uniform sampler. Moreover, KUS is almost oblivious to the number of samples requested.},
}

@article{DBLP:journals/corr/ChakrabortyMV13,
  author    = {Supratik Chakraborty and
               Kuldeep S. Meel and
               Moshe Y. Vardi},
  title     = {A Scalable Approximate Model Counter},
  journal   = {CoRR},
  volume    = {abs/1306.5726},
  year      = {2013},
  url       = {http://arxiv.org/abs/1306.5726},
  archivePrefix = {arXiv},
  eprint    = {1306.5726},
  timestamp = {Mon, 13 Aug 2018 16:47:40 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/ChakrabortyMV13},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@incollection{tseitin1983complexity,
  title={On the complexity of derivation in propositional calculus},
  author={Tseitin, Grigori S},
  booktitle={Automation of Reasoning},
  pages={466--483},
  year={1983},
  publisher={Springer}
}

@book{brualdi_introductory_2010,
  title = {Introductory combinatorics},
  isbn = {978-0-13-602040-0},
  url = {https://search.lib.byu.edu/byu/record/lee.4223721},
  language = {eng},
  urldate = {2019-03-21},
  publisher = {Upper Saddle River, N.J.: Pearson/Prentice Hall},
  author = {Brualdi, Richard A.},
  year = {2010}
}

@incollection{hall_automorphisms_1962,
  title = {Automorphisms of {Steiner} triple systems},
  url = {https://mathscinet.ams.org/mathscinet-getitem?mr=0133054},
  urldate = {2019-03-22},
  booktitle = {Proc. {Sympos}. {Pure} {Math}., {Vol}. {VI}},
  publisher = {American Mathematical Society, Providence, R.I.},
  author = {Hall, Jr., Marshall},
  year = {1962},
  mrnumber = {0133054},
  pages = {47--66},
  file = {MathSciNet Snapshot:/Users/drautb/Zotero/storage/WQGR95QS/mathscinet-getitem.html:text/html}
}

@article{stroop1935studies,
  title={Studies of interference in serial verbal reactions.},
  author={Stroop, J Ridley},
  journal={Journal of Experimental Psychology},
  volume={18},
  number={6},
  pages={643},
  year={1935},
  publisher={Psychological Review Company}
}

@inproceedings{approxmc_CMV16,
  author={Chakraborty, Supratik and  Meel, Kuldeep S. and  Vardi, Moshe Y.},
  title={Algorithmic Improvements in Approximate Counting for Probabilistic Inference: From Linear to Logarithmic SAT Calls},
  code={https://bitbucket.org/kuldeepmeel/approxmc},
  year={2016},
  month={7},
  booktitle={Proceedings of International Joint Conference on Artificial Intelligence (IJCAI)},
  abstract={Probabilistic inference via model counting has emerged as a scalable technique with strong formal guarantees, thanks to recent advances in hashing-based approximate counting. State-of-the-art hashing-based counting algorithms use an {\NP} oracle, such that the number of oracle invocations grows linearly in the number of variables n in the input constraint. We present a new approach to hashing-based approximate model counting in which the number of oracle invocations grows logarithmically in $n$, while still providing strong theoretical guarantees. Our experiments show that the new approach outperforms state-of-the-art techniques for approximate counting by 1-2 orders of magnitude in running time.},
}

@inproceedings{approxmc_SM19,
  author={Soos, Mate and  Meel, Kuldeep S.},
  title={BIRD: Engineering an Efficient {CNF-XOR SAT} Solver and its Applications to Approximate Model Counting},
  booktitle={Proceedings of AAAI Conference on Artificial Intelligence (AAAI)},
  month={1},
  year={2019},
  code={https://github.com/meelgroup/approxmc},
  abstract={Given a Boolean formula F, the problem of model counting, also referred to as \#SAT is to compute the number of solutions of F. Model counting is a fundamental problem in artificial intelligence with a wide range of applications including probabilistic reasoning, decision making under uncertainty, quantified information flow, and the like. Motivated by the success of SAT solvers, there has been surge of interest in the design of hashing-based techniques for approximate model counting for the past decade. We profiled the state of the art approximate model counter ApproxMC3 and observed that over 99.99\% of time is consumed by the underlying SAT solver, CryptoMinisat. This observation motivated us to ask: Can we design an efficient underlying CNF-XOR SAT solver that can take advantage of the structure of hashing-based algorithms and would this lead to an efficient approximate model counter? The primary contribution of this paper is an affirmative answer to the above question. We present a novel architecture, called BIRD, to handle CNF-XOR formulas arising from hashing-based techniques. The resulting hashing-based approximate model counter, called ApproxMC3, employs the BIRD framework in its underlying SAT solver, CryptoMinisat. To the best of our knowledge, we conducted the most comprehensive study of evaluation performance of counting algorithms involving 1896 benchmarks with computational effort totaling 86400 computational hours. Our experimental evaluation demonstrates significant runtime performance improvement for ApproxMC3 over ApproMC2. In particular, we solve 648 benchmarks more than ApproMC2, the state of the art approximate model counter and for all the formulas where both ApproMC2 and ApproxMC3 did not timeout and took more than 1 seconds, the mean speedup is 284.40 -- more than two orders of magnitude.},
}

@inproceedings{chakraborty_balancing_2014,
  title = {Balancing Scalability and Uniformity in {SAT}-Witness Generator},
  abstract = {Constrained-random simulation is the predominant approach used in the industry for functional verification of complex digital designs. The effectiveness of this approach depends on two key factors: the quality of constraints used to generate test vectors, and the randomness of solutions generated from a given set of constraints. In this paper, we focus on the second problem, and present an algorithm that significantly improves the state-of-the-art of (almost-)uniform generation of solutions of large Boolean constraints. Our algorithm provides strong theoretical guarantees on the uniformity of generated solutions and scales to problems involving hundreds of thousands of variables.},
  booktitle = {Proceedings of {Design} {Automation} {Conference} ({DAC})},
  author = {Chakraborty, Supratik and Meel, Kuldeep S. and Vardi, Moshe Y.},
  year = {2014},
  pages = {60:1--60:6}
}

@incollection{gomes_near-uniform_2007,
  title = {Near-Uniform Sampling of Combinatorial Spaces Using {XOR} Constraints},
  url = {http://papers.nips.cc/paper/3013-near-uniform-sampling-of-combinatorial-spaces-using-xor-constraints.pdf},
  urldate = {2019-03-29},
  booktitle = {Advances in {Neural} {Information} {Processing} {Systems} 19},
  publisher = {MIT Press},
  author = {Gomes, Carla P and Sabharwal, Ashish and Selman, Bart},
  editor = {Schölkopf, B. and Platt, J. C. and Hoffman, T.},
  year = {2007},
  pages = {481--488},
  file = {NIPS Full Text PDF:/Users/drautb/Zotero/storage/SDH6JN6R/Gomes et al. - 2007 - Near-Uniform Sampling of Combinatorial Spaces Usin.pdf:application/pdf;NIPS Snapshot:/Users/drautb/Zotero/storage/BGXK7BC9/3013-near-uniform-sampling-of-combinatorial-spaces-using-xor-constraints.html:text/html}
}

@inproceedings{Gomes:2007:SXM:1768142.1768155,
  author = {Gomes, Carla P. and Hoffmann, Joerg and Sabharwal, Ashish and Selman, Bart},
  title = {Short {XORs} for Model Counting: From Theory to Practice},
  booktitle = {Proceedings of the 10th International Conference on Theory and Applications of Satisfiability Testing},
  series = {SAT'07},
  year = {2007},
  isbn = {978-3-540-72787-3},
  location = {Lisbon, Portugal},
  pages = {100--106},
  numpages = {7},
  url = {http://dl.acm.org/citation.cfm?id=1768142.1768155},
  acmid = {1768155},
  publisher = {Springer-Verlag},
  address = {Berlin, Heidelberg},
}

@inproceedings{chakraborty_parallel_2015,
  title = {On Parallel Scalable Uniform {SAT} Witness Generator},
  abstract = {Constrained-random verification (CRV) is widely used in industry for validating hardware designs. The effectiveness of CRV depends on the uniformity of test stimuli generated from a given set of constraints. Most existing techniques sacrifice either uniformity or scalability when generating stimuli. While recent work based on random hash functions has shown that it is possible to generate almost uniform stimuli from constraints with 100,000+ variables, the performance still falls short of today's industrial requirements. In this paper, we focus on pushing the performance frontier of uniform stimulus generation further. We present a random hashing-based, easily parallelizable algorithm, UniGen2, for sampling solutions of propositional constraints. UniGen2 provides strong and relevant theoretical guarantees in the context of CRV, while also offering significantly improved performance compared to existing almost-uniform generators. Experiments on a diverse set of benchmarks show that UniGen2 achieves an average speedup of about 20X over a state-of-the-art sampling algorithm, even when running on a single core. Moreover, experiments with multiple cores show that UniGen2 achieves a near-linear speedup in the number of cores, thereby boosting performance even further.},
  booktitle = {Proceedings of {Tools} and {Algorithms} for the {Construction} and {Analysis} of {Systems} ({TACAS})},
  author = {Chakraborty, Supratik and Fremont, Daniel J. and Meel, Kuldeep S. and Seshia, Sanjit A. and Vardi, Moshe Y.},
  year = {2015},
  pages = {304--319}
}

@InProceedings{spur,
  author="Achlioptas, Dimitris
  and Hammoudeh, Zayd S.
  and Theodoropoulos, Panos",
  editor="Beyersdorff, Olaf
  and Wintersteiger, Christoph M.",
  title="Fast Sampling of Perfectly Uniform Satisfying Assignments",
  booktitle="Theory and Applications of Satisfiability Testing -- SAT 2018",
  year="2018",
  publisher="Springer International Publishing",
  address="Cham",
  pages="135--147",
  abstract="We present an algorithm for perfectly uniform sampling of satisfying assignments, based on the exact model counter sharpSAT and reservoir sampling. In experiments across several hundred formulas, our sampler is faster than the state of the art by 10 to over 100,000 times.",
  isbn="978-3-319-94144-8"
}
